применяем к картинке графический эффект	filter: function(arg);  /* несколько -  разделяются пробелами */

затемняем картинку	filter:brightness( 50%);

размываем картинку	filter:blur(5px);

обесцвечиваем картинку(3?)	filter:grayscale(1%) или filter:saturate(1%) или filter:sepia(1%)

меняем прозрачность картинки	filter: opacity(25%)

обращаем цвета	filter:invert(1%);

поправляем фоновую картинку блока( size repeat pos)	{background-size: cover; background repeat: norepeat; background-position: center center;}

способы работы с адаптивными картинками(2)	width/height для классов или тег picture

что делает тег picture	выбирает оптимальную картинку исходя из ситуации, согласно предусловиям

обязательные компоненты <picture>(1/2)	0	+ <source>; 1 <img> 

обязательные аттрибуты source(2)  <source srcset="path" media = "condition"> /* media = "(min-width:465px)" */

обязательные аттрибуты image(2)	<img src="path" alt="tinyReview">

синтаксис условия picture	media = "(min-width:1px)" - в кавычках, скобках

преимущество <picture>	при растягивании картинка может потерять в качестве

как называть подключаемые файлы	согласно BEM

что определяют %-ы - доля размера элемента относительно родителя

какой аттрибут в целом обрабатывает выход контента за пределы родителя	overflow

можно ли использовать пробелы в названиях подключаемых файлов	нет

стратегии центровки элента (фикс, авто)	или регламентно margin и тогда width:auto или регламентно width, и тогда margin-left, margin-right- auto

меняем курсор на руку при наведении на элемент 	cursor:pointer;